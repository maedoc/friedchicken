function megfield_pp2_clean_and_gain(sid)
%% test
%sid = '100307'
datapath = '/tmp/brainstorm_db/hcp/data';
runs = dir(sprintf('%s/%s/*/*c,rfDC.mat', datapath, sid))

%%
sFiles = {};
count = 1;
for i=1:size(runs,1)
    if ~isempty(strfind(runs(i).folder, 'noise'))
        continue
    end
    parts = strsplit(runs(i).folder, filesep);
    runname = parts{end};
    sFiles{count} = [sid filesep runname filesep runs(i).name];
    count = count + 1;
end

%% stuff generating by bst

% Process: Notch filter: 60Hz 120Hz 180Hz 240Hz 300Hz
sFiles = bst_process('CallProcess', 'process_notch', sFiles, [], ...
    'sensortypes', 'MEG, EEG', ...
    'freqlist',    [60, 120, 180, 240, 300], ...
    'cutoffW',     1, ...
    'useold',      0, ...
    'read_all',    1);

% Process: Band-pass:1Hz-150Hz
sFiles = bst_process('CallProcess', 'process_bandpass', sFiles, [], ...
    'sensortypes', 'MEG, EEG', ...
    'highpass',    1, ...
    'lowpass',     150, ...
    'tranband',    0, ...
    'attenuation', 'strict', ...  % 60dB
    'ver',         '2019', ...  % 2019
    'mirror',      0, ...
    'read_all',    1);

% Process: Detect heartbeats
sFiles = bst_process('CallProcess', 'process_evt_detect_ecg', sFiles, [], ...
    'channelname', 'ECG+, -ECG-', ...
    'timewindow',  [], ...
    'eventname',   'cardiac');

% Process: Detect eye blinks
sFiles = bst_process('CallProcess', 'process_evt_detect_eog', sFiles, [], ...
    'channelname', 'VEOG+, -VEOG-', ...
    'timewindow',  [], ...
    'eventname',   'blink');

% Process: SSP ECG: cardiac
sFiles = bst_process('CallProcess', 'process_ssp_ecg', sFiles, [], ...
    'eventname',   'cardiac', ...
    'sensortypes', 'MEG', ...
    'usessp',      1, ...
    'select',      1);

% Process: SSP EOG: blink
sFiles = bst_process('CallProcess', 'process_ssp_eog', sFiles, [], ...
    'eventname',   'blink', ...
    'sensortypes', 'MEG', ...
    'usessp',      1, ...
    'select',      1);

% Process: Apply SSP & CTF compensation
sFiles = bst_process('CallProcess', 'process_ssp_apply', sFiles, []);

% Process: Compute head model
sFiles = bst_process('CallProcess', 'process_headmodel', sFiles, [], ...
    'Comment',     '', ...
    'sourcespace', 1, ...  % Cortex surface
    'meg',         3, ...  % Overlapping spheres
    'eeg',         3, ...  % OpenMEEG BEM
    'ecog',        2, ...  % OpenMEEG BEM
    'seeg',        2, ...  % OpenMEEG BEM
    'openmeeg',    struct(...
         'BemSelect',    [1, 1, 1], ...
         'BemCond',      [1, 0.0125, 1], ...
         'BemNames',     {{'Scalp', 'Skull', 'Brain'}}, ...
         'BemFiles',     {{}}, ...
         'isAdjoint',    1, ...
         'isAdaptative', 1, ...
         'isSplit',      0, ...
         'SplitLength',  4000), ...
    'channelfile', '');
